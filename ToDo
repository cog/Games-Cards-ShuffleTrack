To Do list:

 * new deck
    * start a deck with a specific number of cards
    * move the different deck orders to submodules
    * is_original
        $deck->is_original; # check if the order or contents of the deck has changed

 * changing a deck
    * remove cards from a deck
        $deck->remove_random();    # remove a random card
        $deck->remove_random( 5 ); # remove five cards
        $deck->remove_all( 'Joker' ); # remove all Jokers
        $deck->remove( 'AS' ); # remove the Ace of Spades
    * replace? ("to replace a card in the deck")
    * lose? ("to lose a card in the deck")
    * count how many of a specific card are present in the deck
        # TODO: document very well what happens with user-specified cards
        $deck->count( 'C' ); # count how many Clubs are in the deck
        $deck->count( '10' ); # count how many tens
        $deck->count( 'Joker' ); # count how many Jokers there are in the deck
    * drop cards from the deck
        $deck->drop( 10 ); # same as dribble, but completely discarding the cards
    * start a deck with 4 decks
        Games::Cards::ShuffleTrack->new( 4 );

 * shuffling
    * the wash
    * riffle shuffle
    	* riffle stacking
        * we're not considering how fast each half is being depleted nor whether the packets riffled on each side are of similar sizes
    * faro
        * faro X cards from the top
        * anti-faro
            $deck->anti-faro( $pile1, $pile2 );
    * shuffle the deck
        $deck->shuffle
        $deck->shuffle( 'table' ); # shuffle on the table
        $deck->shuffle( 'hands' ); # shuffle in the hand
    * milk shuffle and variations

 * cutting
    * bury top 10 cards under next 5
        $deck->uncut( 10, 5 );
        $deck->undo( 10, 5 );
    * slip cut
        $deck->slip_cut( $pile );
        my $pile = $deck->slip_cut;
        $deck->slip_cut( $pile, 10 ); # break under 10 cards (counting the slip card)
        my $pile = $deck->slip_cut( 10 ); # break under 10 cards (counting the slip card)

 * documentation
    * document what happens if you try to faro a deck with an odd number of cards
    * acknowledgments
    * add a glossary
        * balance of the deck
        * top/bottom stock
    * create links on README.md to facilitate navigation on Github
    * update the descriptions of the different shuffles

 * testing
    * rearrange the tests and cleanup the variable names in the tests

 * inner-working
    my $params = _parse_params( @_ );
    # number_params
    # decks and piles

 * advanced
    * controlled multiple cuts (e.g., cut the top X cards under position N)
    * given a series of procedures and a desired final result, assert the initial order of the deck
    * track relationship between cards: from a specific order and through a series of procedures, present conclusions about the end relationship
    * given an initial deck order and a series of procedures, run that sequence X times to analyze the outcome (e.g., 1st card usually ends in certain positions)
    * implement counting systems

 * games
    * poker
        * order cards in a hand
        * analyze hands (value)
        * make the best hand out of X cards
        * compare hands
    * blackjack
        * analyze hands (value)
        * compare hands
    * gin rummy?
